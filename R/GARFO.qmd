---
title: "GARFO"
author: "cslovas"
format: 
  html:
    toc: true
    self-contained: true
editor: visual
---

```{r}
#| label: loading libraries
#| echo:    false
#| message: false
#| warning: false

library(here)
library(tidyverse)
library(gmRi)
library(readxl)
library(janitor)
library(tidygraph)
library(ggraph)
library(igraph)
library(patchwork)
library(matrixStats)
install.packages("tidygeocoder")
library(tidygeocoder)
```

# Data Exploration
This works to reshape that data to be usable in network analysis; need to do with other multi-type license and across all sets of data

```{r}
#| label: Excel files
#| echo:    false
#| message: false
#| warning: false
box_path <- "/Users/clovas/Library/CloudStorage/Box-Box/Mills Lab/Projects/MESG-permits/"
garfo_data_path <- paste0(box_path, "Git/Permits_MESG/GARFO/")

read_xl_files <- function(file_name){
  out <- read_excel(paste0(file_name))
  return(out)
}

all_garfo_data <- tibble("File_Path" = list.files(garfo_data_path, pattern = ".xlsx", full.names = TRUE)) %>% 
  mutate(., "Data" = map(File_Path, read_xl_files)) %>% 
  unnest(Data) %>% 
  select(!File_Path)
```

# GARFO Portfolio Matrix
Select variables needed for network analysis (should we decide to do that)

```{r}
#| label: portfolio & co-matrix
#| echo:    false
#| message: false
#| warning: false
garfo <- all_garfo_data %>%
  select(AP_NUM, VP_NUM, AP_YEAR, PPORT, PPST, BLACK_SEA_BASS:TILEFISH)

garfo %>%
  pivot_longer(cols = BLACK_SEA_BASS:TILEFISH, names_to = "TARGET_SPECIES", values_to = "PERMIT_CATEGORY", values_drop_na = TRUE) %>%
  separate(PERMIT_CATEGORY, c("a","b", "c", "d", "e", "f", "g", "h", "i", "j"), sep = ",") %>%
  pivot_longer(cols = a:j, names_to = "cols", values_to = "CATEGORY", values_drop_na = TRUE) %>%
  select(!cols) %>%
  mutate(COUNT = 1,
         LICENSE = paste(TARGET_SPECIES, CATEGORY, sep = "_"),
         ROW = row_number()) %>%
  select(!c(TARGET_SPECIES, CATEGORY)) %>%
  arrange(LICENSE) %>%
  group_by(AP_NUM) %>%
  pivot_wider(names_from = LICENSE, values_from = COUNT, names_expand=TRUE,values_fill = list(COUNT = 0)) %>%
  select(!ROW) %>%
  arrange(AP_YEAR) %>%
  group_by(AP_NUM, AP_YEAR, VP_NUM, PPORT, PPST)%>% 
  summarise(across(everything(),sum)) -> garfo_portfolio_all


# garfo_matrix_all <- garfo_portfolio_all %>%
#   ungroup(AP_NUM, AP_YEAR, PPORT) %>%
#   select(!c(AP_NUM, AP_YEAR, PPORT, PPST))
# garfo_matrix_all <- crossprod(as.matrix(garfo_matrix_all))
# diag(garfo_matrix_all) <- 0


```

# Select Maine to North Carolina
we'll need to filter out species of interest, and state and principal port to geocode. Ultimately, our goal is to track the movement of licenses (permit transfer) via vessel number (VP_NUM). We'll need home port state and zip as well as home port state (because no ZIP is included for principal port).

```{r}
#| label: time series
#| echo:    false
#| message: false
#| warning: false

garfo %>%
  pivot_longer(cols = BLACK_SEA_BASS:TILEFISH, names_to = "TARGET_SPECIES", values_to = "PERMIT_CATEGORY", values_drop_na = TRUE) %>%
  separate(PERMIT_CATEGORY, c("a","b", "c", "d", "e", "f", "g", "h", "i", "j"), sep = ",") %>%
  pivot_longer(cols = a:j, names_to = "cols", values_to = "CATEGORY", values_drop_na = TRUE) %>%
  select(!cols) %>%
  mutate(COUNT = 1,
         LICENSE = paste(TARGET_SPECIES, CATEGORY, sep = "_")) %>%
  group_by(AP_YEAR, PPST, TARGET_SPECIES) %>% 
  nest() %>%
  mutate(TOTAL = map_dbl(data, function(x){sum(x$COUNT)})) %>%
  select(!data) %>% 
  group_by(PPST) %>%
  nest() -> garfo_time_series

# garfo_time_series <- garfo_time_series %>% 
#   mutate(PLOT = map2(data, PPST,  function(data, PPST){
#   ggplot(data = data) +
#   geom_line(aes(x = AP_YEAR, y = TOTAL)) +
#   facet_wrap(~TARGET_SPECIES, scales = "free_y") +
#   ggtitle(paste(PPST)) +
#   scale_fill_gmri()+
#   theme_gmri()}))

# garfo_time_series$PLOT[[28]]
```

```{r}
#| label: geocoding by state
#| echo: false 
#| message: false
#| warning: false

# running all states at once takes multiple hours; much more efficient to break up by state and stitch back together

garfo_portfolio_all %>%
  filter(PPST == "ME") %>%
  ungroup() %>%
  select(PPORT, PPST) %>%
  distinct()  %>% 
  arrange(PPST) %>%
  geocode(., city = PPORT, state = PPST)-> geo_me

garfo_portfolio_all %>%
  filter(PPST == "NH") %>%
  ungroup() %>%
  select(PPORT, PPST) %>%
  distinct()  %>% 
  arrange(PPST) %>%
  geocode(., city = PPORT, state = PPST)-> geo_nh

garfo_portfolio_all %>%
  filter(PPST == "MA") %>%
  ungroup() %>%
  select(PPORT, PPST) %>%
  distinct()  %>% 
  arrange(PPST) %>%
  geocode(., city = PPORT, state = PPST)-> geo_ma

garfo_portfolio_all %>%
  filter(PPST %in%  c("CT", "RI")) %>%
  ungroup() %>%
  select(PPORT, PPST) %>%
  distinct()  %>% 
  arrange(PPST) %>%
  geocode(., city = PPORT, state = PPST)-> geo_ct_ri

garfo_portfolio_all %>%
  filter(PPST %in%  c("MD", "DE")) %>%
  ungroup() %>%
  select(PPORT, PPST) %>%
  distinct()  %>% 
  arrange(PPST) %>%
  geocode(., city = PPORT, state = PPST)-> geo_md_de

garfo_portfolio_all %>%
  filter(PPST == "VA") %>%
  ungroup() %>%
  select(PPORT, PPST) %>%
  distinct()  %>% 
  arrange(PPST) %>%
  geocode(., city = PPORT, state = PPST)-> geo_va

garfo_portfolio_all %>%
  filter(PPST == "NC") %>%
  ungroup() %>%
  select(PPORT, PPST) %>%
  distinct()  %>% 
  arrange(PPST) %>%
  geocode(., city = PPORT, state = PPST)-> geo_nc


geo_codes <- geo_me %>%
  full_join(geo_nh) %>%
  full_join(geo_ma) %>%
  full_join(geo_ct_ri) %>%
  full_join(geo_md_de) %>%
  full_join(geo_va) %>%
  full_join(geo_nc)

typos <- geo_codes %>%
  filter(is.na(lat)) %>%
  unite(PPORT, PPST, col = "PORT", sep = ", ")

write.csv(geo_codes, file = paste(here("Data/"), "geo_code_v1.csv"))
```

```{r}
#| label: selecting variables of interest
#| echo: false
#| message: false
#| warning: false

garfo_portfolio_all %>%
  filter(PPST %in% c("ME", "NH", "MA", "CT", "RI", "DE", "MD", "VA", "NC")) %>%
  ungroup(AP_NUM) %>%
  pivot_longer(cols = BLACK_SEA_BASS_1:TILEFISH_D, names_to = "LICENSE", values_to = "COUNT") %>%
  filter(!COUNT == 0) %>%
  group_by(VP_NUM, LICENSE) %>%
  left_join(geo_codes) -> vessels

vessels %>%
  filter(str_starts(LICENSE, "HERRING_")) %>%
  distinct() %>%
  drop_na() %>%
  filter(!lat <= 32) -> herring_test # Galilee, RI is throwing it off

ggplot(herring_test)+
  geom_bar(aes(x = AP_YEAR)) +
  facet_wrap(~LICENSE) +
  theme_gmri() # maybe plot all license types to see which are most prevalent? Center of gravity? Weighted by count?

herring_test %>%
  ungroup() %>%
  mutate(LAT = round(lat, digits = 1)) %>%
  group_by(VP_NUM, AP_YEAR, LICENSE, LAT) %>%
  summarise(COUNT = sum(COUNT)) -> herring_test # okay this might work

herring_test %>%
  group_by(AP_YEAR, LICENSE) %>%
  mutate(CENTER_LAT = weightedMean(LAT, w = COUNT)) -> herring_test

ggplot(herring_test) +
  geom_line(aes(x = AP_YEAR, y = CENTER_LAT, color = LICENSE)) +
  scale_color_gmri() +
  theme_gmri() # not what I would've expected but ok

# sea bass? 
vessels %>%
  filter(str_starts(LICENSE, "BLACK_SEA_BASS")) %>%
  distinct() %>%
  drop_na() -> bass_test

bass_test %>% 
  ungroup() %>%
  mutate(LAT = round(lat, digits = 1)) %>%
  group_by(VP_NUM, AP_YEAR, LICENSE, LAT) %>%
  summarise(COUNT = sum(COUNT)) %>% 
  group_by(AP_YEAR, LICENSE) %>%
  mutate(CENTER_LAT = weightedMean(LAT, w = COUNT)) -> bass_test

ggplot(bass_test) +
  geom_line(aes(x = AP_YEAR, y = CENTER_LAT, color = LICENSE)) +
  ylab("Center Latitude") + xlab("Year") + ggtitle("Black Sea Bass") +
  scale_color_gmri() +
  theme_gmri() # ok some northward movement, this could work 

```

# Weirdos

```{r}
#| label: weirdos
#| echo:    false
#| message: false
#| warning: false
all_garfo_data %>%
       filter(PPST == "AB") -> PPORT_AB # typo?
all_garfo_data %>%
       filter(PPST == "32") -> PPORT_32# very confused mainer
all_garfo_data %>%
       filter(PPST == "AK") -> PPORT_AK # alaskan fishing fleet based in Rockland?
View(all_garfo_data %>%
  filter(PPST == "VT"))  # I have no idea
all_garfo_data %>%
  filter(VP_NUM == "212607")

all_garfo_data %>%
  ungroup() %>%
  unite(PPORT, PPST, col = "PORT", sep = ", ") %>%
  filter(PORT %in% typos$PORT) %>%
  arrange(PORT) %>%
  select(AP_NUM, CITY, ST, ZIP, HPORT, HPST, PORT) %>%
  distinct() -> weirdos # maybe use ZIP for these? Follow up with Kathy 


```