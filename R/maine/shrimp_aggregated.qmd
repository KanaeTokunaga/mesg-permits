---
title: "Shrimp"
subtitle: "Stoll et al divisions"
author: "cslovas"
format: 
  html:
    toc: true
    self-contained: true
editor: visual
---

```{r}
#| label:   load libraries & data
#| echo:    false
#| message: false
#| warning: false

# Install & load the libraries
library(tidyverse)
library(tidygraph)
library(ggraph)
library(igraph)
library(here)
library(gmRi)
library(grid)
library(gt)
library(gomfish)

stoll_portfolio <- read_rds(here("Data","stoll_portfolio.rds")) 
    
portfolio <- stoll_portfolio %>% 
  filter(license_year >= 2009 & license_year <= 2020 & !license_year %in% c(2014,2015))
```

# Networks

### All harvesters

-   *Pre-closure*: 2009-2013
-   *Post-closure*: 2016-2020

```{r}
#| label: all harvesters
#| echo: false
#| message: false
#| warning: false
#| fig-align: center
#| fig-width: 13
#| fig-height: 9

co_matrix <- portfolio %>%
  arrange(license_year) %>%
  mutate(shrimp = ifelse(license_year >= 2015 , "post-closure", "pre-closure")) %>%
  ungroup() %>% 
  select(!c(license_year, landings_number)) %>%
  group_by(shrimp) %>%
  nest() %>% 
  mutate(co_matrix = map(data, function(df){
    out <- crossprod(as.matrix(df)) 
    diag(out) <- 0
    return(out)
  })) %>%
  select(shrimp, co_matrix) 

metrics <- co_matrix %>%
  mutate(graph_obj     = map(co_matrix, function(x){graph_from_adjacency_matrix(x, mode = "undirected", weighted = TRUE)}),
         degree        = map(graph_obj, function(x){degree(x)}),
         betweeness    = map(graph_obj, function(x){betweenness(x)}),
         density       = map(graph_obj, function(x){edge_density(x, loops = FALSE)}),
         community     = map(graph_obj, function(x){cluster_louvain(x)}),
         modularity    = map(community, function(x){modularity(x)}),
         membership    = map(community, function(x){membership(x)}),
         evcent        = map(graph_obj, function(x){evcent(x)}))


networks <- metrics %>%
  mutate(ggraph = map2(graph_obj, shrimp, function(x, y){
    x <- as_tbl_graph(x)
    x %>% 
      activate(nodes) %>%
      mutate(community = as.character(group_louvain())) -> x
    out <- ggraph(x, 'kk') + 
      geom_node_point(aes(color = community), size = 7, alpha = 1, show.legend = FALSE) +
      geom_edge_link(aes(width = weight), alpha = 0.5, show.legend = FALSE) + 
      coord_fixed() +
      scale_edge_width(range = c(0.2, 2)) +
      scale_color_gmri() +
      ggtitle(shrimp) +
      geom_node_text(aes(label = name), repel = TRUE, color = "black", max.overlaps = 100) +
      theme_graph()   
  })) %>%
  mutate(ggraph_circular = map2(graph_obj, shrimp, function(x, y){
    x <- as_tbl_graph(x)
    x %>% 
      activate(nodes) %>%
      mutate(community = as.character(group_louvain())) -> x
    out <- ggraph(x, layout = "linear", circular = TRUE) + 
      geom_node_point(aes(color = community), size = 7, alpha = 1, show.legend = FALSE) +
      geom_edge_link(aes(width = weight), alpha = 0.5, show.legend = FALSE) + 
      scale_edge_width(range = c(0.2, 2)) +
      scale_color_gmri(palette = "mixed") +
      coord_fixed() +
      ggtitle(shrimp) +
      geom_node_text(aes(label = name), repel = TRUE, color = "black", max.overlaps = 100) +
      theme_graph()})) %>%
  select(shrimp, density, modularity, ggraph, ggraph_circular)

# gridExtra::marrangeGrob(networks$ggraph, layout_matrix = matrix(1:2, ncol = 2, nrow = 1, byrow= TRUE), top = NULL)

gridExtra::marrangeGrob(networks$ggraph_circular, layout_matrix = matrix(1:2, ncol = 2, nrow = 1, byrow= TRUE), top = NULL)

metrics %>%
  select(shrimp, density, modularity) %>%
  gt(groupname_col = NULL) %>%
  cols_label(
    shrimp = "",
    density = md("**Density**"),
    modularity = md("**Modularity**"))
```

### Shrimpers

```{r}
#| label: participation
#| echo: false
#| message: false
#| warning: false

portfolio %>% 
  # select("license_year", "landings_number", "Northern Shrimp") %>%
  mutate(participation = ifelse(`Northern Shrimp` == 1, "true", "false")) %>%
  relocate(participation, .after = landings_number) -> participation  # not using full time span to ensure shrimp licenses were held up until closure

participation %>%
  filter(participation == "true") %>%
  ungroup() %>%
  select(landings_number) %>%
  distinct() -> shrimpers

```

```{r}
#| label: shrimper networks
#| echo: false
#| message: false
#| warning: false
#| fig-align: center
#| fig-width: 13
#| fig-height: 9

shrimp_matrix <- portfolio %>%  
  filter(landings_number %in% shrimpers$landings_number) %>% 
  ungroup() %>% 
  arrange(license_year) %>%
  mutate(closure = ifelse(license_year >= 2013, "post-closure", "pre-closure")) %>%
  select(!c(license_year, landings_number)) %>%
  group_by(closure) %>%
  nest() %>% 
  mutate(co_matrix = map(data, function(df){
    out <- crossprod(as.matrix(df)) 
    diag(out) <- 0
    return(out)
  })) %>%
  select(closure, co_matrix) 

shrimp_metrics <- shrimp_matrix %>%
  mutate(graph_obj     = map(co_matrix, function(x){graph.adjacency(x, mode = "undirected", weighted = TRUE)}),
         degree        = map(graph_obj, function(x){degree(x)}),
         betweeness    = map(graph_obj, function(x){betweenness(x)}),
         density       = map(graph_obj, function(x){edge_density(x, loops = FALSE)}),
         community     = map(graph_obj, function(x){cluster_louvain(x)}),
         modularity    = map(community, function(x){modularity(x)}),
         membership    = map(community, function(x){membership(x)}),
         evcent        = map(graph_obj, function(x){evcent(x)}))

shrimp_networks <- shrimp_metrics %>%
  mutate(ggraph = map2(graph_obj, closure, function(x, y){
    x <- as_tbl_graph(x)
    x %>% 
      activate(nodes) %>%
      mutate(community = as.character(group_louvain())) -> x
    out <- ggraph(x, 'kk') + 
      geom_node_point(aes(color = community), size = 7, alpha = 1, show.legend = FALSE) +
      geom_edge_link(aes(width = weight), alpha = 0.5, show.legend = FALSE) + 
      coord_fixed() +
      scale_edge_width(range = c(0.2, 2)) +
      scale_color_gmri() +
      ggtitle(closure) +
      geom_node_text(aes(label = name), repel = TRUE, color = "black", max.overlaps = 100) +
      theme_graph()   
  })) %>%
  mutate(ggraph_circular = map2(graph_obj, closure, function(x, y){
    x <- as_tbl_graph(x)
    x %>% 
      activate(nodes) %>%
      mutate(community = as.character(group_louvain())) -> x
    out <- ggraph(x, layout = "linear", circular = TRUE) + 
      geom_node_point(aes(color = community), size = 7, alpha = 1, show.legend = FALSE) +
      geom_edge_link(aes(width = weight), alpha = 0.5, show.legend = FALSE) + 
      scale_edge_width(range = c(0.2, 2)) +
      scale_color_gmri() +
      coord_fixed() +
      ggtitle(closure) +
      geom_node_text(aes(label = name), repel = TRUE, color = "black", max.overlaps = 100) +
      theme_graph()})) %>%
  select(closure, density, modularity, ggraph, ggraph_circular)

# gridExtra::marrangeGrob(shrimp_networks$ggraph, layout_matrix = matrix(1:2, ncol = 2, nrow = 1, byrow= TRUE), top = NULL)

gridExtra::marrangeGrob(shrimp_networks$ggraph_circular, layout_matrix = matrix(1:2, ncol = 2, nrow = 1, byrow= TRUE), top = NULL)

shrimp_metrics %>%
  select(closure, density, modularity) %>%
  gt(groupname_col = NULL) %>%
  cols_label(
    closure = "",
    density = md("**Density**"),
    modularity = md("**Modularity**"))
```


### Non-shrimpers

```{r}
#| label: non-shrimpers
#| echo: false
#| warning: false
#| fig-align: center
#| fig-width: 13
#| fig-height: 9
#|

non_shrimp_matrix <- portfolio %>% 
  filter(!landings_number %in% shrimpers$landings_number) %>% 
  ungroup() %>% 
  arrange(license_year) %>%
  mutate(closure = ifelse(license_year >= 2016, "post-closure", "pre-closure")) %>%
  select(!c(license_year, landings_number)) %>%
  group_by(closure) %>%
  nest() %>% 
  mutate(co_matrix = map(data, function(df){
    out <- crossprod(as.matrix(df)) 
    diag(out) <- 0
    return(out)
  })) %>%
  select(closure, co_matrix) 

non_shrimp_metrics <- non_shrimp_matrix %>%
  mutate(graph_obj     = map(co_matrix, function(x){graph.adjacency(x, mode = "undirected", weighted = TRUE)}),
         degree        = map(graph_obj, function(x){degree(x)}),
         betweeness    = map(graph_obj, function(x){betweenness(x)}),
         density       = map(graph_obj, function(x){edge_density(x, loops = FALSE)}),
         community     = map(graph_obj, function(x){cluster_louvain(x)}),
         modularity    = map(community, function(x){modularity(x)}),
         membership    = map(community, function(x){membership(x)}),
         evcent        = map(graph_obj, function(x){evcent(x)}))

non_shrimp_networks <- non_shrimp_metrics %>%
  mutate(ggraph = map2(graph_obj, closure, function(x, y){
    x <- as_tbl_graph(x)
    x %>% 
      activate(nodes) %>%
      mutate(community = as.character(group_louvain())) -> x
    out <- ggraph(x, 'kk') + 
      geom_node_point(aes(color = community), size = 7, alpha = 1, show.legend = FALSE) +
      geom_edge_link(aes(width = weight), alpha = 0.5, show.legend = FALSE) + 
      coord_fixed() +
      scale_edge_width(range = c(0.2, 2)) +
      scale_color_gmri() +
      ggtitle(closure) +
      geom_node_text(aes(label = name), repel = TRUE, color = "black", max.overlaps = 100) +
      theme_graph()   
  })) %>%
  mutate(ggraph_circular = map2(graph_obj, closure, function(x, y){
    x <- as_tbl_graph(x)
    x %>% 
      activate(nodes) %>%
      mutate(community = as.character(group_louvain())) -> x
    out <- ggraph(x, layout = "linear", circular = TRUE) + 
      geom_node_point(aes(color = community), size = 7, alpha = 1, show.legend = FALSE) +
      geom_edge_link(aes(width = weight), alpha = 0.5, show.legend = FALSE) + 
      scale_edge_width(range = c(0.2, 2)) +
      scale_color_gmri() +
      coord_fixed() +
      ggtitle(closure) +
      geom_node_text(aes(label = name), repel = TRUE, color = "black", max.overlaps = 100) +
      theme_graph()})) %>%
  select(closure, density, modularity, ggraph, ggraph_circular)

# gridExtra::marrangeGrob(shrimp_networks$ggraph, layout_matrix = matrix(1:2, ncol = 2, nrow = 1, byrow= TRUE), top = NULL)

gridExtra::marrangeGrob(non_shrimp_networks$ggraph_circular, layout_matrix = matrix(1:2, ncol = 2, nrow = 1, byrow= TRUE), top = NULL)

non_shrimp_metrics %>%
  select(closure, density, modularity) %>%
  gt(groupname_col = NULL) %>%
  cols_label(
    closure = "",
    density = md("**Density**"),
    modularity = md("**Modularity**"))
```

## Changes in portfolios of shrimp harvesters

```{r}
#| label: shrimper changes 
#| echo: false
#| message: false
#| warning: false
#| fig-align: center
#| fig-width: 13
#| fig-height: 9

portfolio %>% 
  filter(landings_number %in% shrimpers$landings_number) %>% 
  ungroup() %>% 
  select(!landings_number) %>% 
  group_by(license_year) %>% 
  summarise(across(everything(),sum)) %>% 
  pivot_longer(cols = 2:27, names_to = "license_group", values_to = "total_issued") %>%
  mutate(closure = ifelse(license_year <= 2013, "Pre-closure", "Post-closure")) %>%
  ggplot() +
  geom_col(aes(x = license_year, y = total_issued, fill = license_group), color = "white") +
  facet_wrap(~factor(closure, levels = c("Pre-closure", "Post-closure")), scales = "free_x", ncol = 2) +
  ggtitle("Shrimper portfolios", subtitle = "All harvesters") + ylab("Total licenses issued") + xlab("Year") +
  guides(fill = guide_legend(ncol = 9)) +
  scale_fill_gmri()+
  theme_gmri(legend.position = "bottom",
             strip.background = element_rect(fill = "transparent"),
             plot.subtitle = element_text(size = 12),
             strip.text = element_text(color = "black")) 
```

## Entry and exit

```{r}
#| label: entry and exit
#| echo: false
#| message: false
#| warning: false

stoll_portfolio %>% 
  mutate(participation = ifelse(landings_number %in% shrimpers$landings_number, "shrimper", "non_shrimper")) %>% 
  filter(license_year >= 2015 & participation == "shrimper") -> continued

stoll_portfolio %>% 
  mutate(participation = ifelse(landings_number %in% shrimpers$landings_number, "shrimper", "non_shrimper")) %>% 
  filter(participation == "shrimper" & !landings_number %in% continued$landings_number) -> exited

stoll_portfolio %>% 
  filter(landings_number %in% exited$landings_number) %>% 
  group_by(landings_number) %>% 
  summarise(exit_year = max(license_year)) -> exit_year 
```

```{r}
#| label: pre-closure portfolios
#| echo: false
#| message: false
#| warning: false
#| fig-align: center
#| fig-width: 13
#| fig-height: 9

order <- c("Scallop (Dragger)",
           "Scallop (Tender)",
           "Scallop (Hand)",
           "Lobster Apprentice & Student", 
           "Lobster Class I",
           "Lobster Class II",
           "Lobster Class III",
           "Green crab",
           "Marine worm",
           "Shellfish",
           "Surf Clam",
           "Mussel",
           "Mahogany Clam",
           "Seaweed",
           "Sea Urchin (Dragger)",
           "Sea Urchin (Hand)",
           "Sea Urchin (Tender)",
           "Elver",
           "Eel",
           "Northern Shrimp",
           "Sea Cucumber",
           "Pelagic & Anadromous",
           "Commercial Fishing",
           "Aquaculture",
           "Spat",
           "Menhaden")


portfolio %>%  
  filter(landings_number %in% shrimpers$landings_number) %>% 
  ungroup() %>% 
  mutate(continuation = ifelse(landings_number %in% continued$landings_number, "continued", "exited"),
         closure = ifelse(license_year <= 2014, "Pre-closure", "Post-closure")) %>% 
  select(!landings_number) %>% 
  group_by(continuation, closure, license_year) %>% 
  summarise(across(everything(), sum)) %>% 
  pivot_longer(cols = 4:29, names_to = "license_type", values_to = "count") %>%
  # filter(license_year <= 2013) %>%
  group_by(continuation, license_year) %>%
  mutate(total = sum(count)) %>% 
  ungroup() %>% 
  mutate(freq = count/total) -> proportions
  
  
ggplot(proportions %>% filter(continuation == "continued")) +
  geom_col(aes(x = license_year, y = freq, fill = factor(license_type, levels = order)), color = "white") +
  facet_wrap(~factor(closure, levels = c("Pre-closure", "Post-closure")), scales = "free_x", ncol = 2) +
  xlab("Year") + ylab("Proportion") + ggtitle("Shrimper portfolios", subtitle = "Continuing harvesters") + 
  guides(fill = guide_legend(ncol = 9)) +
  scale_fill_gmri()+
    theme_gmri(legend.position = "bottom",
               legend.title = element_blank(), 
               plot.subtitle = element_text(size = 12),
               strip.background = element_rect(fill = "transparent"),
               strip.text = element_text(color = "black"))

```

The proportion of licenses held by shrimpers didn't appear to change dramatically by those who chose to continue in fisheries. Lobster was still the dominant target species by these harvesters.

## Difference in difference estimator

Did the closure of the shrimp fishery impact the number of licenses held by harvesters?

```{r}
#| label: difference in differences
#| echo: false
#| message: false
#| warning: false

stoll_portfolio %>% 
  pivot_longer(3:28, names_to = "license_type", values_to = "count") %>% 
  mutate(shrimp_harvester = ifelse(landings_number %in% shrimpers$landings_number, 1, 0),
         closure = ifelse(license_year >= 2014, 1, 0), 
         did = shrimp_harvester*closure) %>% 
  group_by(license_year, landings_number, shrimp_harvester, closure, did) %>% 
  summarise(total = sum(count))-> shrimp_did

did_regression <- lm(total ~ shrimp_harvester + closure + did, data = shrimp_did)
# summary(did_regression)
# plot(did_regression)

shrimp_did %>% 
  group_by(license_year, shrimp_harvester, closure, did) %>% 
  summarise(avg_total = mean(total)) -> shrimp_did_avg

# summary(lm(avg_total ~ shrimp_harvester + closure + did, data = shrimp_did_avg))
# did_2 <-lm(avg_total ~ shrimp_harvester + closure + did, data = shrimp_did_avg) 
# broom::tidy(did_2)

# plot(did_2)
ggplot(shrimp_did_avg) + 
  geom_line(aes(x = license_year, y = avg_total, color = as.factor(shrimp_harvester))) +
  geom_smooth(aes(x = license_year, y = avg_total, color = as.factor(shrimp_harvester)), method = "lm", se = FALSE, linetype = 2) +
  geom_vline(aes(xintercept = 2014), alpha = 0.9, color = "darkgrey", linetype = 3) +
  ylab("Avg. number of licenses per harvester") + xlab("Year") +
  scale_color_manual(labels = c("No", "Yes"), values = c("#00608A", "#EA4F12")) +
  ylim(c(1,3)) +
  #scale_color_gmri() +
  guides(color = guide_legend(title = "Shrimp harvester")) +
  theme_gmri() 

# this should not be done at the aggregate level/with 2-years omitted
  
```

According to the DiD estimator, the closure did negatively impact those shrimpers in a statistically significant way. It may be worth noting that a significant number of harvester left fisheries entirely after the moratorium and we may need to figure out a way to incorporate exit and entry in the difference-in-difference estimation.

## Chord diagrams

*Updated as of Oct 31* See [Manuscript development](https://carlylovas.github.io/mesg-permits/R/maine/fig_development.html)

